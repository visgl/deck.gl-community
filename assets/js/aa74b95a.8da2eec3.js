"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[509],{7644:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"modules/editable-layers/api-reference/edit-modes/measurement-modes","title":"Measurement Modes","description":"A number of modes provide various measurement capabilities","source":"@site/../docs/modules/editable-layers/api-reference/edit-modes/measurement-modes.md","sourceDirName":"modules/editable-layers/api-reference/edit-modes","slug":"/modules/editable-layers/api-reference/edit-modes/measurement-modes","permalink":"/deck.gl-community/docs/modules/editable-layers/api-reference/edit-modes/measurement-modes","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/editable-layers/api-reference/edit-modes/measurement-modes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Transform Modes","permalink":"/deck.gl-community/docs/modules/editable-layers/api-reference/edit-modes/transform-modes"},"next":{"title":"Outline (Shader Module)","permalink":"/deck.gl-community/docs/modules/editable-layers/api-reference/shader-modules/outline"}}');var l=s(4848),o=s(8453);const t={},d="Measurement Modes",r={},c=[{value:"MeasureDistanceMode",id:"measuredistancemode",level:2},{value:"MeasureAreaMode",id:"measureareamode",level:2},{value:"MeasureAngleMode",id:"measureanglemode",level:2},{value:"ElevationMode",id:"elevationmode",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"measurement-modes",children:"Measurement Modes"})}),"\n",(0,l.jsx)(n.p,{children:"A number of modes provide various measurement capabilities"}),"\n",(0,l.jsx)(n.h2,{id:"measuredistancemode",children:"MeasureDistanceMode"}),"\n",(0,l.jsx)(n.p,{children:"User can measure a distance between two points."}),"\n",(0,l.jsxs)(n.p,{children:["The following options can be provided in the ",(0,l.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"turfOptions"})," (Object, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"options"})," object passed to turf's ",(0,l.jsx)(n.a,{href:"https://turfjs.org/docs/api/distance",children:"distance"})," function"]}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"formatTooltip"})," (Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Function to format tooltip text (argument is the numeric distance)"}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"(distance) => parseFloat(distance).toFixed(2) + units"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"measurementCallback"})," (Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Function to call as measurements are calculated"}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"centerTooltipsOnLine"})," (Boolean, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"If true, the measurement tooltips appear on the middle of their respective line segments rather than at the end"}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/measure-distance-mode.ts",children:"Source code"})}),"\n",(0,l.jsx)(n.h2,{id:"measureareamode",children:"MeasureAreaMode"}),"\n",(0,l.jsx)(n.p,{children:"User can measure an area by drawing an arbitrary polygon."}),"\n",(0,l.jsxs)(n.p,{children:["The following options can be provided in the ",(0,l.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"formatTooltip"})," (Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Function to format tooltip text (argument is the numeric area)"}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"(distance) => parseFloat(distance).toFixed(2) + units"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"measurementCallback"})," (Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Function to call as measurements are calculated"}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/measure-area-mode.ts",children:"Source code"})}),"\n",(0,l.jsx)(n.h2,{id:"measureanglemode",children:"MeasureAngleMode"}),"\n",(0,l.jsx)(n.p,{children:"User can measure an angle by drawing two lines."}),"\n",(0,l.jsxs)(n.p,{children:["The following options can be provided in the ",(0,l.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"formatTooltip"})," (Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Function to format tooltip text (argument is the numeric area)"}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"(distance) => parseFloat(angle).toFixed(2) + units"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"measurementCallback"})," (Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Function to call as measurements are calculated"}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/measure-angle-mode.ts",children:"Source code"})}),"\n",(0,l.jsx)(n.h2,{id:"elevationmode",children:"ElevationMode"}),"\n",(0,l.jsx)(n.p,{children:"User can move a point up and down."}),"\n",(0,l.jsxs)(n.p,{children:["The following options can be provided in the ",(0,l.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"minElevation"})," (Number, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The minimum elevation to allow"}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"0"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"maxElevation"})," (Number, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The maximum elevation to allow"}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"20000"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"calculateElevationChange"})," (Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"A function to use to calculate the elevation change in response to mouse movement"}),"\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"10 * <vertical movement in pixels>"})]}),"\n",(0,l.jsx)(n.li,{children:"Configure to use movement based on viewport:"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"if (mode === 'elevation') {\n  modeConfig.calculateElevationChange = (opts) =>\n    ElevationMode.calculateElevationChangeWithViewport(viewport, opts);\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/elevation-mode.ts",children:"Source code"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(6540);const l={},o=i.createContext(l);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);