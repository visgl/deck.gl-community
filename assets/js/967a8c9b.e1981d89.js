"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[5044],{8289:(e,d,n)=>{n.r(d),n.d(d,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>t,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"modules/graph-layers/api-reference/graph","title":"Graph Class","description":"The Graph class is the base class of the graph.","source":"@site/../docs/modules/graph-layers/api-reference/graph.md","sourceDirName":"modules/graph-layers/api-reference","slug":"/modules/graph-layers/api-reference/graph","permalink":"/deck.gl-community/docs/modules/graph-layers/api-reference/graph","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/graph-layers/api-reference/graph.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Write your own custom layout","permalink":"/deck.gl-community/docs/modules/graph-layers/api-reference/layouts/custom-layout"},"next":{"title":"Node Class","permalink":"/deck.gl-community/docs/modules/graph-layers/api-reference/node"}}');var i=n(4848),o=n(8453);const t={},s="Graph Class",l={},h=[{value:"Constructor",id:"constructor",level:2},{value:"<code>graph</code> (Graph, optional)",id:"graph-graph-optional",level:5},{value:"setGraphName()",id:"setgraphname",level:2},{value:"getGraphName()",id:"getgraphname",level:2},{value:"addEdge(edge)",id:"addedgeedge",level:2},{value:"<code>edge</code> (Edge, required)",id:"edge-edge-required",level:5},{value:"addNode(node)",id:"addnodenode",level:2},{value:"<code>node</code> (Node, required)",id:"node-node-required",level:5},{value:"batchAddEdges(edges)",id:"batchaddedgesedges",level:2},{value:"<code>edges</code> (Edge[], required)",id:"edges-edge-required",level:5},{value:"batchAddNodes(nodes)",id:"batchaddnodesnodes",level:2},{value:"<code>nodes</code> (Node[], required)",id:"nodes-node-required",level:5},{value:"findEdge(edgeId)",id:"findedgeedgeid",level:2},{value:"<code>edgeId</code> (String|Number, required)",id:"edgeid-stringnumber-required",level:5},{value:"<code>edgeId</code> (String|Number, required)",id:"edgeid-stringnumber-required-1",level:5},{value:"findNode(nodeId)",id:"findnodenodeid",level:2},{value:"<code>nodeId</code> (String|Number, required)",id:"nodeid-stringnumber-required",level:5},{value:"getDegree(nodeId)",id:"getdegreenodeid",level:2},{value:"<code>nodeId</code> (String|Number, required)",id:"nodeid-stringnumber-required-1",level:5},{value:"getEdgeMap()",id:"getedgemap",level:2},{value:"getEdges()",id:"getedges",level:2},{value:"getConnectedEdges(nodeId)",id:"getconnectededgesnodeid",level:2},{value:"<code>nodeId</code> (String|Number, required)",id:"nodeid-stringnumber-required-2",level:5},{value:"getNodeMap()",id:"getnodemap",level:2},{value:"getNodes()",id:"getnodes",level:2},{value:"getNodeSiblings(nodeId)",id:"getnodesiblingsnodeid",level:2},{value:"<code>nodeId</code> (String|Number, required)",id:"nodeid-stringnumber-required-3",level:5},{value:"isEmpty()",id:"isempty",level:2},{value:"removeEdge(edgeId)",id:"removeedgeedgeid",level:2},{value:"<code>edgeId</code> (String|Number, required)",id:"edgeid-stringnumber-required-2",level:5},{value:"removeNode(nodeId)",id:"removenodenodeid",level:2},{value:"<code>nodeId</code> (String|Number, required)",id:"nodeid-stringnumber-required-4",level:5},{value:"reset()",id:"reset",level:2},{value:"resetEdges()",id:"resetedges",level:2},{value:"resetNodes()",id:"resetnodes",level:2},{value:"<code>cb</code> (Function, required)",id:"cb-function-required",level:5},{value:"updateEdge(edge)",id:"updateedgeedge",level:2},{value:"<code>edge</code> (Edge, required)",id:"edge-edge-required-1",level:5},{value:"updateNode(node)",id:"updatenodenode",level:2},{value:"<code>node</code> (Node, required)",id:"node-node-required-1",level:5}];function a(e){const d={code:"code",h1:"h1",h2:"h2",h5:"h5",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(d.header,{children:(0,i.jsx)(d.h1,{id:"graph-class",children:"Graph Class"})}),"\n",(0,i.jsxs)(d.p,{children:["The ",(0,i.jsx)(d.code,{children:"Graph"})," class is the base class of the graph."]}),"\n",(0,i.jsx)(d.h2,{id:"constructor",children:"Constructor"}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{className:"language-js",children:"new Graph(graph);\n"})}),"\n",(0,i.jsx)(d.p,{children:"Parameters:"}),"\n",(0,i.jsxs)(d.h5,{id:"graph-graph-optional",children:[(0,i.jsx)(d.code,{children:"graph"})," (Graph, optional)"]}),"\n",(0,i.jsx)(d.h2,{id:"setgraphname",children:"setGraphName()"}),"\n",(0,i.jsx)(d.p,{children:"Set the name of the graph."}),"\n",(0,i.jsx)(d.h2,{id:"getgraphname",children:"getGraphName()"}),"\n",(0,i.jsx)(d.p,{children:"Get the name of the graph. Normally it can be used for dirty check."}),"\n",(0,i.jsx)(d.h2,{id:"addedgeedge",children:"addEdge(edge)"}),"\n",(0,i.jsx)(d.p,{children:"Add a new edge to the graph."}),"\n",(0,i.jsxs)(d.h5,{id:"edge-edge-required",children:[(0,i.jsx)(d.code,{children:"edge"})," (Edge, required)"]}),"\n",(0,i.jsx)(d.p,{children:"Expect a Edge object to be added to the graph."}),"\n",(0,i.jsx)(d.h2,{id:"addnodenode",children:"addNode(node)"}),"\n",(0,i.jsx)(d.p,{children:"Add a new node to the graph."}),"\n",(0,i.jsxs)(d.h5,{id:"node-node-required",children:[(0,i.jsx)(d.code,{children:"node"})," (Node, required)"]}),"\n",(0,i.jsx)(d.p,{children:"Expect a Node object to be added to the graph."}),"\n",(0,i.jsx)(d.h2,{id:"batchaddedgesedges",children:"batchAddEdges(edges)"}),"\n",(0,i.jsx)(d.p,{children:"Batch add edges to the graph."}),"\n",(0,i.jsxs)(d.h5,{id:"edges-edge-required",children:[(0,i.jsx)(d.code,{children:"edges"})," (Edge[], required)"]}),"\n",(0,i.jsx)(d.p,{children:"Expect a list of Edge objects to be added to the graph."}),"\n",(0,i.jsx)(d.h2,{id:"batchaddnodesnodes",children:"batchAddNodes(nodes)"}),"\n",(0,i.jsx)(d.p,{children:"Batch add nodes to the graph."}),"\n",(0,i.jsxs)(d.h5,{id:"nodes-node-required",children:[(0,i.jsx)(d.code,{children:"nodes"})," (Node[], required)"]}),"\n",(0,i.jsx)(d.p,{children:"Expect a list of Node objects to be added to the graph."}),"\n",(0,i.jsx)(d.h2,{id:"findedgeedgeid",children:"findEdge(edgeId)"}),"\n",(0,i.jsxs)(d.h5,{id:"edgeid-stringnumber-required",children:[(0,i.jsx)(d.code,{children:"edgeId"})," (String|Number, required)"]}),"\n",(0,i.jsx)(d.p,{children:"The target edge ID."}),"\n",(0,i.jsx)(d.p,{children:"Find the edge by edge ID."}),"\n",(0,i.jsxs)(d.h5,{id:"edgeid-stringnumber-required-1",children:[(0,i.jsx)(d.code,{children:"edgeId"})," (String|Number, required)"]}),"\n",(0,i.jsx)(d.p,{children:"The target edge ID."}),"\n",(0,i.jsx)(d.h2,{id:"findnodenodeid",children:"findNode(nodeId)"}),"\n",(0,i.jsx)(d.p,{children:"Find the node by node ID."}),"\n",(0,i.jsxs)(d.h5,{id:"nodeid-stringnumber-required",children:[(0,i.jsx)(d.code,{children:"nodeId"})," (String|Number, required)"]}),"\n",(0,i.jsx)(d.p,{children:"The target node ID."}),"\n",(0,i.jsx)(d.h2,{id:"getdegreenodeid",children:"getDegree(nodeId)"}),"\n",(0,i.jsx)(d.p,{children:"Get the degree of the node by node ID."}),"\n",(0,i.jsxs)(d.h5,{id:"nodeid-stringnumber-required-1",children:[(0,i.jsx)(d.code,{children:"nodeId"})," (String|Number, required)"]}),"\n",(0,i.jsx)(d.p,{children:"The target node ID."}),"\n",(0,i.jsx)(d.h2,{id:"getedgemap",children:"getEdgeMap()"}),"\n",(0,i.jsx)(d.p,{children:"Get the edge map of the graph. The key of the map is the ID of the edges."}),"\n",(0,i.jsx)(d.h2,{id:"getedges",children:"getEdges()"}),"\n",(0,i.jsx)(d.p,{children:"Get all the edges of the graph."}),"\n",(0,i.jsx)(d.h2,{id:"getconnectededgesnodeid",children:"getConnectedEdges(nodeId)"}),"\n",(0,i.jsx)(d.p,{children:"Return all the connected edges of a node by nodeID."}),"\n",(0,i.jsxs)(d.h5,{id:"nodeid-stringnumber-required-2",children:[(0,i.jsx)(d.code,{children:"nodeId"})," (String|Number, required)"]}),"\n",(0,i.jsx)(d.p,{children:"The target node ID."}),"\n",(0,i.jsx)(d.h2,{id:"getnodemap",children:"getNodeMap()"}),"\n",(0,i.jsx)(d.p,{children:"Get the node map of the graph. The key of the map is the ID of the nodes."}),"\n",(0,i.jsx)(d.h2,{id:"getnodes",children:"getNodes()"}),"\n",(0,i.jsx)(d.p,{children:"Get all the nodes of the graph."}),"\n",(0,i.jsx)(d.h2,{id:"getnodesiblingsnodeid",children:"getNodeSiblings(nodeId)"}),"\n",(0,i.jsx)(d.p,{children:"Return all the sibling nodes of a node by nodeID."}),"\n",(0,i.jsxs)(d.h5,{id:"nodeid-stringnumber-required-3",children:[(0,i.jsx)(d.code,{children:"nodeId"})," (String|Number, required)"]}),"\n",(0,i.jsx)(d.p,{children:"The target node ID."}),"\n",(0,i.jsx)(d.h2,{id:"isempty",children:"isEmpty()"}),"\n",(0,i.jsx)(d.p,{children:"Return true if the graph is empty."}),"\n",(0,i.jsx)(d.h2,{id:"removeedgeedgeid",children:"removeEdge(edgeId)"}),"\n",(0,i.jsx)(d.p,{children:"Remove an edge from the graph by the edge ID"}),"\n",(0,i.jsxs)(d.h5,{id:"edgeid-stringnumber-required-2",children:[(0,i.jsx)(d.code,{children:"edgeId"})," (String|Number, required)"]}),"\n",(0,i.jsx)(d.p,{children:"The target edge ID."}),"\n",(0,i.jsx)(d.h2,{id:"removenodenodeid",children:"removeNode(nodeId)"}),"\n",(0,i.jsx)(d.p,{children:"Remove a node from the graph by node ID"}),"\n",(0,i.jsxs)(d.h5,{id:"nodeid-stringnumber-required-4",children:[(0,i.jsx)(d.code,{children:"nodeId"})," (String|Number, required)"]}),"\n",(0,i.jsx)(d.p,{children:"The target node ID."}),"\n",(0,i.jsx)(d.h2,{id:"reset",children:"reset()"}),"\n",(0,i.jsx)(d.p,{children:"Clean up everything in the graph."}),"\n",(0,i.jsx)(d.h2,{id:"resetedges",children:"resetEdges()"}),"\n",(0,i.jsx)(d.p,{children:"Clean up all the edges in the graph."}),"\n",(0,i.jsx)(d.h2,{id:"resetnodes",children:"resetNodes()"}),"\n",(0,i.jsx)(d.p,{children:"Clean up all the nodes in the graph."}),"\n",(0,i.jsx)(d.h1,{id:"transactioncb",children:"transaction(cb)"}),"\n",(0,i.jsx)(d.p,{children:"Perform a batch of operations defined by cb before indicating graph is updated"}),"\n",(0,i.jsxs)(d.h5,{id:"cb-function-required",children:[(0,i.jsx)(d.code,{children:"cb"})," (Function, required)"]}),"\n",(0,i.jsx)(d.h2,{id:"updateedgeedge",children:"updateEdge(edge)"}),"\n",(0,i.jsx)(d.p,{children:"Update the indicated edge to the provided value"}),"\n",(0,i.jsxs)(d.h5,{id:"edge-edge-required-1",children:[(0,i.jsx)(d.code,{children:"edge"})," (Edge, required)"]}),"\n",(0,i.jsx)(d.h2,{id:"updatenodenode",children:"updateNode(node)"}),"\n",(0,i.jsx)(d.p,{children:"Update the indicated node to the provided value"}),"\n",(0,i.jsxs)(d.h5,{id:"node-node-required-1",children:[(0,i.jsx)(d.code,{children:"node"})," (Node, required)"]})]})}function c(e={}){const{wrapper:d}={...(0,o.R)(),...e.components};return d?(0,i.jsx)(d,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,d,n)=>{n.d(d,{R:()=>t,x:()=>s});var r=n(6540);const i={},o=r.createContext(i);function t(e){const d=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function s(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:d},e.children)}}}]);