"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9038],{4517:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"modules/graph-layers/api-reference/styling/node/node-style","title":"Node Style","description":"Node accessors control the way how users want to render nodes. Layers provide the flexibility that users can add several visual layers to represent a node, such as adding circles, icons, and text labels.","source":"@site/../docs/modules/graph-layers/api-reference/styling/node/node-style.md","sourceDirName":"modules/graph-layers/api-reference/styling/node","slug":"/modules/graph-layers/api-reference/styling/node/node-style","permalink":"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/node/node-style","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/graph-layers/api-reference/styling/node/node-style.md","tags":[],"version":"current","frontMatter":{}}');var s=l(4848),i=l(8453);const t={},r="Node Style",d={},a=[{value:"Usage",id:"usage",level:3},{value:"<code>type</code> (String, required)",id:"type-string-required",level:3},{value:"<code>offset</code> (null | Array, optional)",id:"offset-null--array-optional",level:3},{value:"<code>scaleWithZoom</code> (Boolean, optional)",id:"scalewithzoom-boolean-optional",level:3},{value:"<code>textSizeMinPixels</code> (Number, optional)",id:"textsizeminpixels-number-optional",level:3},{value:"<code>data</code> (Function, optional)",id:"data-function-optional",level:3},{value:"<code>visible</code> (Boolean, optional)",id:"visible-boolean-optional",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"node-style",children:"Node Style"})}),"\n",(0,s.jsx)(n.p,{children:"Node accessors control the way how users want to render nodes. Layers provide the flexibility that users can add several visual layers to represent a node, such as adding circles, icons, and text labels."}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:"Example of nodeStyle:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"<GraphGL\n  {...shareProps}\n  nodeStyle={[\n    {\n      type: NODE_TYPE.CIRCLE,\n      radius: 10,\n      color: '#f00'\n      data: data => data,\n      visible: true\n    }\n  ]}\n/>\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"type-string-required",children:[(0,s.jsx)(n.code,{children:"type"})," (String, required)"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Type"})," can only be ",(0,s.jsx)(n.code,{children:"CIRCLE"}),", ",(0,s.jsx)(n.code,{children:"MARKER"}),", ",(0,s.jsx)(n.code,{children:"RECTANGLE"}),", or ",(0,s.jsx)(n.code,{children:"LABEL"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Different type of layer may requires different properties. See more details in the 'Node style' /docs/api-reference/node-style-circle chapter below."}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"offset-null--array-optional",children:[(0,s.jsx)(n.code,{children:"offset"})," (null | Array, optional)"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default: ",(0,s.jsx)(n.code,{children:"null"})]}),"\n",(0,s.jsx)(n.li,{children:"The offset distance from the position of the object."}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"scalewithzoom-boolean-optional",children:[(0,s.jsx)(n.code,{children:"scaleWithZoom"})," (Boolean, optional)"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default: ",(0,s.jsx)(n.code,{children:"true"})]}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"scaleWithZoom"})," is true, the size of the element will be scaled according to the zoom level."]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"textsizeminpixels-number-optional",children:[(0,s.jsx)(n.code,{children:"textSizeMinPixels"})," (Number, optional)"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default: ",(0,s.jsx)(n.code,{children:"9"})]}),"\n",(0,s.jsx)(n.li,{children:"Sets the minimum text size permitted by pixels"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"data-function-optional",children:[(0,s.jsx)(n.code,{children:"data"})," (Function, optional)"]}),"\n",(0,s.jsx)(n.p,{children:"Allows setting of the layer data via accessor"}),"\n",(0,s.jsxs)(n.h3,{id:"visible-boolean-optional",children:[(0,s.jsx)(n.code,{children:"visible"})," (Boolean, optional)"]}),"\n",(0,s.jsx)(n.p,{children:"Determines if the layer is visible"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>t,x:()=>r});var o=l(6540);const s={},i=o.createContext(s);function t(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);