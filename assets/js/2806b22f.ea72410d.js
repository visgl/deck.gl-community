"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9951],{3605:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>t});const o=JSON.parse('{"id":"modules/editable-layers/api-reference/edit-modes/draw-modes","title":"Draw Modes","description":"EditModes provide a way of handling user interactions in order to manipulate GeoJSON features and geometries.","source":"@site/../docs/modules/editable-layers/api-reference/edit-modes/draw-modes.md","sourceDirName":"modules/editable-layers/api-reference/edit-modes","slug":"/modules/editable-layers/api-reference/edit-modes/draw-modes","permalink":"/deck.gl-community/docs/modules/editable-layers/api-reference/edit-modes/draw-modes","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/editable-layers/api-reference/edit-modes/draw-modes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Edit Modes","permalink":"/deck.gl-community/docs/modules/editable-layers/api-reference/edit-modes/core-modes"},"next":{"title":"Transform Modes","permalink":"/deck.gl-community/docs/modules/editable-layers/api-reference/edit-modes/transform-modes"}}');var r=i(4848),d=i(8453);const l={},s="Draw Modes",c={},t=[{value:"Draw configuration options",id:"draw-configuration-options",level:2},{value:"DrawPointMode",id:"drawpointmode",level:2},{value:"DrawLineStringMode",id:"drawlinestringmode",level:2},{value:"ExtendLineStringMode",id:"extendlinestringmode",level:2},{value:"ResizeCircleMode",id:"resizecirclemode",level:2},{value:"DrawPolygonMode",id:"drawpolygonmode",level:2},{value:"Draw90DegreePolygonMode",id:"draw90degreepolygonmode",level:2},{value:"DrawPolygonByDraggingMode",id:"drawpolygonbydraggingmode",level:2},{value:"DrawRectangleMode",id:"drawrectanglemode",level:2},{value:"DrawRectangleFromCenterMode",id:"drawrectanglefromcentermode",level:2},{value:"DrawRectangleUsingThreePointsMode",id:"drawrectangleusingthreepointsmode",level:2},{value:"DrawSquareMode",id:"drawsquaremode",level:2},{value:"DrawSquareFromCenterMode",id:"drawsquarefromcentermode",level:2},{value:"DrawCircleFromCenterMode",id:"drawcirclefromcentermode",level:2},{value:"DrawCircleByDiameterMode",id:"drawcirclebydiametermode",level:2},{value:"DrawEllipseByBoundingBoxMode",id:"drawellipsebyboundingboxmode",level:2},{value:"DrawEllipseUsingThreePointsMode",id:"drawellipseusingthreepointsmode",level:2},{value:"SplitPolygonMode",id:"splitpolygonmode",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"draw-modes",children:"Draw Modes"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"EditMode"}),"s provide a way of handling user interactions in order to manipulate GeoJSON features and geometries."]}),"\n",(0,r.jsx)(n.h2,{id:"draw-configuration-options",children:"Draw configuration options"}),"\n",(0,r.jsxs)(n.p,{children:["Note that for all polygon drawing modes, the following options can also be provided in the ",(0,r.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"booleanOperation"})," (optional): ",(0,r.jsx)(n.code,{children:"null|'union'|'difference'|'intersection'"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If non-null, requires a single ",(0,r.jsx)(n.code,{children:"Polygon"})," or ",(0,r.jsx)(n.code,{children:"MultiPolygon"})," selection"]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"null"}),", the drawn ",(0,r.jsx)(n.code,{children:"Polygon"})," is added as a new feature regardless of selection"]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"union"}),", the drawn ",(0,r.jsx)(n.code,{children:"Polygon"})," is unioned with the selected geometry"]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"difference"}),", the drawn ",(0,r.jsx)(n.code,{children:"Polygon"})," is subtracted from the selected geometry"]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"intersection"}),", the drawn ",(0,r.jsx)(n.code,{children:"Polygon"})," is intersected with the selected geometry"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"drawpointmode",children:"DrawPointMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new ",(0,r.jsx)(n.code,{children:"Point"})," feature by clicking where the point is to be."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-point-mode.ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"drawlinestringmode",children:"DrawLineStringMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new ",(0,r.jsx)(n.code,{children:"LineString"})," feature by clicking positions to add. User finishes drawing by double-clicking."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-line-string-mode.ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"extendlinestringmode",children:"ExtendLineStringMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can extend an existing ",(0,r.jsx)(n.code,{children:"LineString"})," feature by clicking positions to add. A single ",(0,r.jsx)(n.code,{children:"LineString"})," feature must be selected for this mode."]}),"\n",(0,r.jsxs)(n.p,{children:["The following options can be provided in the ",(0,r.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"drawAtFront"})," (optional): ",(0,r.jsx)(n.code,{children:"<boolean>"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"true"}),', will extend from the "beginning" of the line, i.e. relative to the start of the coordinates array.']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Callback parameters"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"editContext"})," argument to the ",(0,r.jsx)(n.code,{children:"onEdit"})," callback contains the following properties:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"positionIndexes"})," (Array): An array of numbers representing the indexes of the added position within the feature's ",(0,r.jsx)(n.code,{children:"coordinates"})," array"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"position"})," (Array): An array containing the ground coordinates (i.e. [lng, lat]) of the added position"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/extend-line-string-mode.ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"resizecirclemode",children:"ResizeCircleMode"}),"\n",(0,r.jsx)(n.p,{children:"User can resize an existing circular Polygon feature by clicking and dragging along the ring."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/resize-circle-mode.js",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"drawpolygonmode",children:"DrawPolygonMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by clicking positions to add then closing the polygon (or double-clicking)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-polygon-mode.js",children:"Source code"})}),"\n",(0,r.jsxs)(n.p,{children:["The following options can be provided in the ",(0,r.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"preventOverlappingLines"})," (optional): ",(0,r.jsx)(n.code,{children:"boolean"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"true"}),", it will not be possible to add a polygon point if the current line overlaps any other lines on the same polygon."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Callback parameters"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"editContext"})," argument to the ",(0,r.jsx)(n.code,{children:"onEdit"})," callback contains the following properties:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"positionIndexes"})," (Array): An array of numbers representing the indexes of the added position within the feature's ",(0,r.jsx)(n.code,{children:"coordinates"})," array"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"position"})," (Array): An array containing the ground coordinates (i.e. [lng, lat]) of the added position"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"draw90degreepolygonmode",children:"Draw90DegreePolygonMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new ",(0,r.jsx)(n.code,{children:"Polygon"})," feature with 90 degree corners (right angle) by clicking positions to add then closing the polygon (or double-clicking). After clicking the 2 points, the draw mode guides/allows to have right angle polygon."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-90degree-polygon-mode.ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"drawpolygonbydraggingmode",children:"DrawPolygonByDraggingMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by dragging (similar to the lasso tool commonly found in photo editing software)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-polygon-by-dragging-mode.ts",children:"Source code"})}),"\n",(0,r.jsxs)(n.p,{children:["The following options can be provided in the ",(0,r.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"throttleMs"})," (optional): ",(0,r.jsx)(n.code,{children:"number"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If provided, the dragging function will be throttled by the specified number of milliseconds."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"drawrectanglemode",children:"DrawRectangleMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new rectangular ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by clicking two opposing corners of the rectangle."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-rectangle-mode.ts",children:"Source code"})}),"\n",(0,r.jsxs)(n.p,{children:["The following options can be provided in the ",(0,r.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dragToDraw"})," (optional): ",(0,r.jsx)(n.code,{children:"boolean"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"true"}),", user can click and drag instead of clicking twice. Note however, that the user will not be able to pan the map while drawing."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"drawrectanglefromcentermode",children:"DrawRectangleFromCenterMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new rectangular ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by clicking the center then along a corner of the rectangle."]}),"\n",(0,r.jsxs)(n.p,{children:["The following options can be provided in the ",(0,r.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dragToDraw"})," (optional): ",(0,r.jsx)(n.code,{children:"boolean"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"true"}),", user can click and drag instead of clicking twice. Note however, that the user will not be able to pan the map while drawing."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-rectangle-from-center-mode.ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"drawrectangleusingthreepointsmode",children:"DrawRectangleUsingThreePointsMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new rectangular ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by clicking three corners of the rectangle."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-rectangle-using-three-points-mode.ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"drawsquaremode",children:"DrawSquareMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new square-shaped ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by clicking two opposing corners of the square."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-square-mode.ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"drawsquarefromcentermode",children:"DrawSquareFromCenterMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new square-shaped ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by clicking the center and then along one of the corners of the square."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modesdraw-square-from-center-mode..ts",children:"Source code"})}),"\n",(0,r.jsxs)(n.p,{children:["The following options can be provided in the ",(0,r.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dragToDraw"})," (optional): ",(0,r.jsx)(n.code,{children:"boolean"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"true"}),", user can click and drag instead of clicking twice. Note however, that the user will not be able to pan the map while drawing."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"drawcirclefromcentermode",children:"DrawCircleFromCenterMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new circular ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by clicking the center then along the ring. Properties of the circle will be added to the resulting geometry in the object editProperties."]}),"\n",(0,r.jsxs)(n.p,{children:["The following options can be provided in the ",(0,r.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"steps"})," (optional): ",(0,r.jsx)(n.code,{children:"x <number>"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If steps: ",(0,r.jsx)(n.code,{children:"x"})," means the circle will be drawn using ",(0,r.jsx)(n.code,{children:"x"})," number of points."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dragToDraw"})," (optional): ",(0,r.jsx)(n.code,{children:"boolean"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"true"}),", user can click and drag instead of clicking twice. Note however, that the user will not be able to pan the map while drawing."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modesdraw-circle-from-center-mode..ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"drawcirclebydiametermode",children:"DrawCircleByDiameterMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new circular ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by clicking the two ends of its diameter. Properties of the circle will be added to the resulting geometry in the object editProperties."]}),"\n",(0,r.jsxs)(n.p,{children:["The following options can be provided in the ",(0,r.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"steps"})," (optional): ",(0,r.jsx)(n.code,{children:"x <number>"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If steps: ",(0,r.jsx)(n.code,{children:"x"})," means the circle will be drawn using ",(0,r.jsx)(n.code,{children:"x"})," number of points."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dragToDraw"})," (optional): ",(0,r.jsx)(n.code,{children:"boolean"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"true"}),", user can click and drag instead of clicking twice. Note however, that the user will not be able to pan the map while drawing."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modesdraw-circle-by-diameter-mode..ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"drawellipsebyboundingboxmode",children:"DrawEllipseByBoundingBoxMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new ellipse shape ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by clicking two corners of bounding box. Properties of the ellipse will be added to the resulting geometry in the object editProperties."]}),"\n",(0,r.jsxs)(n.p,{children:["The following options can be provided in the ",(0,r.jsx)(n.code,{children:"modeConfig"})," object:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dragToDraw"})," (optional): ",(0,r.jsx)(n.code,{children:"boolean"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"true"}),", user can click and drag instead of clicking twice. Note however, that the user will not be able to pan the map while drawing."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-ellipse-by-bounding-box-mode.ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"drawellipseusingthreepointsmode",children:"DrawEllipseUsingThreePointsMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can draw a new ellipse shape ",(0,r.jsx)(n.code,{children:"Polygon"})," feature by clicking three points along the ring. Properties of the ellipse will be added to the resulting geometry in the object editProperties."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/draw-ellipse-using-three-points-mode.ts",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"splitpolygonmode",children:"SplitPolygonMode"}),"\n",(0,r.jsxs)(n.p,{children:["User can split a polygon by drawing a new ",(0,r.jsx)(n.code,{children:"LineString"})," feature on top of the polygon."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"If the first and the last click is outside the polygon, it will split the polygon"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"If the clicked position is inside the polygon, it will not split the polygon"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl-community/blob/master/modules/editable-layers/src/edit-modes/split-polygon-mode.ts",children:"Source code"})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>s});var o=i(6540);const r={},d=o.createContext(r);function l(e){const n=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(d.Provider,{value:n},e.children)}}}]);