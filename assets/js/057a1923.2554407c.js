"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[7041],{8834:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"modules/graph-layers/api-reference/styling/node/node-style-rectangle","title":"RECTANGLE","description":"width (Number | Function, required)","source":"@site/../docs/modules/graph-layers/api-reference/styling/node/node-style-rectangle.md","sourceDirName":"modules/graph-layers/api-reference/styling/node","slug":"/modules/graph-layers/api-reference/styling/node/node-style-rectangle","permalink":"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/node/node-style-rectangle","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/graph-layers/api-reference/styling/node/node-style-rectangle.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CIRCLE","permalink":"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/node/node-style-circle"},"next":{"title":"MARKER","permalink":"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/node/node-style-marker"}}');var t=i(4848),o=i(8453);const l={},c="RECTANGLE",s={},d=[{value:"<code>width</code> (Number | Function, required)",id:"width-number--function-required",level:3},{value:"<code>height</code> (Number | Function, required)",id:"height-number--function-required",level:3},{value:"<code>fill</code> (String | Array | Function, optional)",id:"fill-string--array--function-optional",level:3},{value:"<code>stroke</code> (String | Array | Function, optional)",id:"stroke-string--array--function-optional",level:3},{value:"<code>strokeWidth</code> (Number | Function, optional)",id:"strokewidth-number--function-optional",level:3}];function a(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rectangle",children:"RECTANGLE"})}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)("img",{src:"/gatsby/images/node-styles/rectangle.png",height:"100"})}),"\n",(0,t.jsxs)(n.h3,{id:"width-number--function-required",children:[(0,t.jsx)(n.code,{children:"width"})," (Number | Function, required)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The width of the rectancle."}),"\n",(0,t.jsx)(n.li,{children:"If a number is provided, it is used as the width for all objects."}),"\n",(0,t.jsx)(n.li,{children:"If a function is provided, it is called on each object to retrieve its width."}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"height-number--function-required",children:[(0,t.jsx)(n.code,{children:"height"})," (Number | Function, required)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The height of the rectangle."}),"\n",(0,t.jsx)(n.li,{children:"If a number is provided, it is used as the height for all objects."}),"\n",(0,t.jsx)(n.li,{children:"If a function is provided, it is called on each object to retrieve its height."}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"fill-string--array--function-optional",children:[(0,t.jsx)(n.code,{children:"fill"})," (String | Array | Function, optional)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Default: ",(0,t.jsx)(n.code,{children:"[0, 0, 0, 255]"})]}),"\n",(0,t.jsxs)(n.li,{children:["The value can be hex code, color name, or color array ",(0,t.jsx)(n.code,{children:"[r, g, b, a]"})," (each component is in the 0 - 255 range).\nIf a color value (hex code, color name, or array) is provided, it is used as the global color for all objects."]}),"\n",(0,t.jsx)(n.li,{children:"If a function is provided, it is called on each object to retrieve its color."}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"stroke-string--array--function-optional",children:[(0,t.jsx)(n.code,{children:"stroke"})," (String | Array | Function, optional)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Default: ",(0,t.jsx)(n.code,{children:"[0, 0, 0, 255]"})]}),"\n",(0,t.jsxs)(n.li,{children:["The value can be hex code, color name, or color array ",(0,t.jsx)(n.code,{children:"[r, g, b, a]"})," (each component is in the 0 - 255 range)."]}),"\n",(0,t.jsx)(n.li,{children:"If a color value (hex code, color name, or array) is provided, it is used as the global color for all objects."}),"\n",(0,t.jsx)(n.li,{children:"If a function is provided, it is called on each rectangle to retrieve its color."}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"strokewidth-number--function-optional",children:[(0,t.jsx)(n.code,{children:"strokeWidth"})," (Number | Function, optional)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Default: ",(0,t.jsx)(n.code,{children:"0"}),"\nThe width of the outline of each rectangle.\nIf a number is provided, it is used as the outline width for all rectangles.\nIf a function is provided, it is called on each rectangle to retrieve its outline width."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var r=i(6540);const t={},o=r.createContext(t);function l(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);