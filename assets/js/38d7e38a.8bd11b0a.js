"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[3976],{32:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>t});const n=JSON.parse('{"id":"modules/infovis-layers/api-reference/vertical-grid-layer","title":"VerticalGridLayer","description":"Render evenly spaced vertical grid lines along the x-axis.","source":"@site/../docs/modules/infovis-layers/api-reference/vertical-grid-layer.md","sourceDirName":"modules/infovis-layers/api-reference","slug":"/modules/infovis-layers/api-reference/vertical-grid-layer","permalink":"/deck.gl-community/docs/modules/infovis-layers/api-reference/vertical-grid-layer","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/infovis-layers/api-reference/vertical-grid-layer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"TimeAxisLayer","permalink":"/deck.gl-community/docs/modules/infovis-layers/api-reference/time-axis-layer"},"next":{"title":"Overview","permalink":"/deck.gl-community/docs/modules/graph-layers/"}}');var l=i(4848),o=i(8453);const s={},c="VerticalGridLayer",d={},t=[{value:"Properties",id:"properties",level:2},{value:"<code>xMin</code> (Number, required)",id:"xmin-number-required",level:3},{value:"<code>xMax</code> (Number, required)",id:"xmax-number-required",level:3},{value:"<code>tickCount</code> (Number, optional)",id:"tickcount-number-optional",level:3},{value:"<code>yMin</code>, <code>yMax</code> (Number, optional)",id:"ymin-ymax-number-optional",level:3},{value:"<code>width</code> (Number, optional)",id:"width-number-optional",level:3},{value:"<code>color</code> (Color, optional)",id:"color-color-optional",level:3},{value:"Sub Layers",id:"sub-layers",level:2},{value:"Source",id:"source",level:2}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.header,{children:(0,l.jsx)(r.h1,{id:"verticalgridlayer",children:"VerticalGridLayer"})}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-ts",children:"export type VerticalGridLayerProps = LayerProps & {\n  xMin: number; // Start time in milliseconds since epoch\n  xMax: number; // End time in milliseconds since epoch\n  tickCount?: number; // Optional: Number of tick marks (default: 5)\n  yMin?: number; // Minimum Y-coordinate for grid lines\n  yMax?: number; // Maximum Y-coordinate for grid lines\n  width?: number; // Optional: Width of the grid lines (default: 1)\n  color?: [number, number, number, number]; // Optional: RGBA color for grid lines (default: [200, 200, 200, 255])\n}; \n"})}),"\n",(0,l.jsx)(r.p,{children:"Render evenly spaced vertical grid lines along the x-axis."}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-js",children:"import {VerticalGridLayer} from '@deck.gl-community/infovis-layers';\n\nnew VerticalGridLayer({\n  id: 'grid',\n  xMin: 0,\n  xMax: 1000,\n  tickCount: 5,\n  yMin: -100,\n  yMax: 100,\n  color: [200, 200, 200, 255]\n});\n"})}),"\n",(0,l.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsxs)(r.p,{children:["Inherits from all ",(0,l.jsx)(r.a,{href:"https://deck.gl/docs/api-reference/core/composite-layer",children:"CompositeLayer"})," properties."]}),"\n",(0,l.jsxs)(r.h3,{id:"xmin-number-required",children:[(0,l.jsx)(r.code,{children:"xMin"})," (Number, required)"]}),"\n",(0,l.jsx)(r.p,{children:"Start time in milliseconds since epoch."}),"\n",(0,l.jsxs)(r.h3,{id:"xmax-number-required",children:[(0,l.jsx)(r.code,{children:"xMax"})," (Number, required)"]}),"\n",(0,l.jsx)(r.p,{children:"End time in milliseconds since epoch."}),"\n",(0,l.jsxs)(r.h3,{id:"tickcount-number-optional",children:[(0,l.jsx)(r.code,{children:"tickCount"})," (Number, optional)"]}),"\n",(0,l.jsxs)(r.p,{children:["Number of grid lines to draw. Default: ",(0,l.jsx)(r.code,{children:"5"}),"."]}),"\n",(0,l.jsxs)(r.h3,{id:"ymin-ymax-number-optional",children:[(0,l.jsx)(r.code,{children:"yMin"}),", ",(0,l.jsx)(r.code,{children:"yMax"})," (Number, optional)"]}),"\n",(0,l.jsxs)(r.p,{children:["Vertical range of grid lines. Defaults: ",(0,l.jsx)(r.code,{children:"-1e6"})," to ",(0,l.jsx)(r.code,{children:"1e6"}),"."]}),"\n",(0,l.jsxs)(r.h3,{id:"width-number-optional",children:[(0,l.jsx)(r.code,{children:"width"})," (Number, optional)"]}),"\n",(0,l.jsxs)(r.p,{children:["Line width in pixels. Default: ",(0,l.jsx)(r.code,{children:"1"}),"."]}),"\n",(0,l.jsxs)(r.h3,{id:"color-color-optional",children:[(0,l.jsx)(r.code,{children:"color"})," (Color, optional)"]}),"\n",(0,l.jsxs)(r.p,{children:["RGBA color for grid lines. Default: ",(0,l.jsx)(r.code,{children:"[200, 200, 200, 255]"}),"."]}),"\n",(0,l.jsx)(r.h2,{id:"sub-layers",children:"Sub Layers"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"LineLayer"})," for grid lines"]}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"source",children:"Source"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.a,{href:"https://github.com/visgl/deck.gl/tree/master/modules/infovis-layers/src/layers/vertical-grid-layer.ts",children:"modules/infovis-layers/src/layers/vertical-grid-layer.ts"})})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,r,i)=>{i.d(r,{R:()=>s,x:()=>c});var n=i(6540);const l={},o=n.createContext(l);function s(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);