"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[6120],{735:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"modules/graph-layers/api-reference/styling/edge/edge-style-label","title":"LABEL","description":"text (String | Function, required)","source":"@site/../docs/modules/graph-layers/api-reference/styling/edge/edge-style-label.md","sourceDirName":"modules/graph-layers/api-reference/styling/edge","slug":"/modules/graph-layers/api-reference/styling/edge/edge-style-label","permalink":"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/edge/edge-style-label","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/graph-layers/api-reference/styling/edge/edge-style-label.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LABEL","permalink":"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/node/node-style-label"},"next":{"title":"FLOW","permalink":"/deck.gl-community/docs/modules/graph-layers/api-reference/styling/edge/edge-style-flow"}}');var l=i(4848),r=i(8453);const o={},s="LABEL",c={},d=[{value:"<code>text</code> (String | Function, required)",id:"text-string--function-required",level:3},{value:"<code>color</code> (String | Array | Function, optional)",id:"color-string--array--function-optional",level:3},{value:"<code>fontSize</code> (Number | Function, optional)",id:"fontsize-number--function-optional",level:3},{value:"<code>textAnchor</code> (String | Function, optional)",id:"textanchor-string--function-optional",level:3},{value:"<code>alignmentBaseline</code> (String | Function, optional)",id:"alignmentbaseline-string--function-optional",level:3}];function a(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"label",children:"LABEL"})}),"\n",(0,l.jsx)("p",{align:"center",children:(0,l.jsx)("img",{src:"/gatsby/images/edge-styles/label.png",height:"200"})}),"\n",(0,l.jsxs)(n.h3,{id:"text-string--function-required",children:[(0,l.jsx)(n.code,{children:"text"})," (String | Function, required)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The text of the label."}),"\n",(0,l.jsxs)(n.li,{children:["If a string is provided for ",(0,l.jsx)(n.code,{children:"text"}),", all the edges will have the same text."]}),"\n",(0,l.jsx)(n.li,{children:"If an accessor function is provided, the function will be called to retrieve the text of each edge."}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"color-string--array--function-optional",children:[(0,l.jsx)(n.code,{children:"color"})," (String | Array | Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"[255, 255, 255, 255]"})]}),"\n",(0,l.jsxs)(n.li,{children:["The value can be hex code, color name, or color array ",(0,l.jsx)(n.code,{children:"[r, g, b, a]"})," (each component is in the 0 - 255 range)."]}),"\n",(0,l.jsx)(n.li,{children:"If a color value (hex code, color name, or array) is provided, it is used as the global color for all edges."}),"\n",(0,l.jsx)(n.li,{children:"If a function is provided, it is called on each edge to retrieve its color."}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"fontsize-number--function-optional",children:[(0,l.jsx)(n.code,{children:"fontSize"})," (Number | Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"12"})]}),"\n",(0,l.jsxs)(n.li,{children:["If a number is provided for ",(0,l.jsx)(n.code,{children:"fontSize"}),", all the labels will have the same font size."]}),"\n",(0,l.jsx)(n.li,{children:"If an accessor function is provided, the function will be called to retrieve the font size of each label."}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"textanchor-string--function-optional",children:[(0,l.jsx)(n.code,{children:"textAnchor"})," (String | Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Default: ",(0,l.jsx)(n.code,{children:"middle"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"The text anchor. Available options include 'start', 'middle' and 'end'."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"If a string is provided, it is used as the text anchor for all edges."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"If a function is provided, it is called on each edge to retrieve its text anchor."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"alignmentbaseline-string--function-optional",children:[(0,l.jsx)(n.code,{children:"alignmentBaseline"})," (String | Function, optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Default: ",(0,l.jsx)(n.code,{children:"center"}),"\nThe alignment baseline. Available options include 'top', 'center' and 'bottom'."]}),"\n",(0,l.jsx)(n.li,{children:"If a string is provided, it is used as the alignment baseline for all edges."}),"\n",(0,l.jsx)(n.li,{children:"If a function is provided, it is called on each edge to retrieve its alignment baseline."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>s});var t=i(6540);const l={},r=t.createContext(l);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);