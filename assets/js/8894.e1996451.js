"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[8894],{8894:(e,t,i)=>{i.d(t,{A:()=>F});var n=i(9452),s=i(6053);var o=i(3178),r=i(2549),a=i(1388),l=i(4968),p=i(1105);const u={circle:{type:r.A,props:{filled:"filled",stroked:"stroked",lineWidthMaxPixels:"lineWidthMaxPixels",lineWidthMinPixels:"lineWidthMinPixels",lineWidthScale:"lineWidthScale",lineWidthUnits:"lineWidthUnits",pointRadiusMaxPixels:"radiusMaxPixels",pointRadiusMinPixels:"radiusMinPixels",pointRadiusScale:"radiusScale",pointRadiusUnits:"radiusUnits",pointAntialiasing:"antialiasing",pointBillboard:"billboard",getFillColor:"getFillColor",getLineColor:"getLineColor",getLineWidth:"getLineWidth",getPointRadius:"getRadius"}},icon:{type:o.A,props:{iconAtlas:"iconAtlas",iconMapping:"iconMapping",iconSizeMaxPixels:"sizeMaxPixels",iconSizeMinPixels:"sizeMinPixels",iconSizeScale:"sizeScale",iconSizeUnits:"sizeUnits",iconAlphaCutoff:"alphaCutoff",iconBillboard:"billboard",getIcon:"getIcon",getIconAngle:"getAngle",getIconColor:"getColor",getIconPixelOffset:"getPixelOffset",getIconSize:"getSize"}},text:{type:a.A,props:{textSizeMaxPixels:"sizeMaxPixels",textSizeMinPixels:"sizeMinPixels",textSizeScale:"sizeScale",textSizeUnits:"sizeUnits",textBackground:"background",textBackgroundPadding:"backgroundPadding",textFontFamily:"fontFamily",textFontWeight:"fontWeight",textLineHeight:"lineHeight",textMaxWidth:"maxWidth",textOutlineColor:"outlineColor",textOutlineWidth:"outlineWidth",textWordBreak:"wordBreak",textCharacterSet:"characterSet",textBillboard:"billboard",textFontSettings:"fontSettings",getText:"getText",getTextAngle:"getAngle",getTextColor:"getColor",getTextPixelOffset:"getPixelOffset",getTextSize:"getSize",getTextAnchor:"getTextAnchor",getTextAlignmentBaseline:"getAlignmentBaseline",getTextBackgroundColor:"getBackgroundColor",getTextBorderColor:"getBorderColor",getTextBorderWidth:"getBorderWidth"}}},g={type:l.A,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",lineBillboard:"billboard",getLineColor:"getColor",getLineWidth:"getWidth"}},d={type:p.A,props:{extruded:"extruded",filled:"filled",wireframe:"wireframe",elevationScale:"elevationScale",material:"material",_full3d:"_full3d",getElevation:"getElevation",getFillColor:"getFillColor",getLineColor:"getLineColor"}};function c({type:e,props:t}){const i={};for(const n in t)i[n]=e.defaultProps[t[n]];return i}function h(e,t){const{transitions:i,updateTriggers:n}=e.props,s={updateTriggers:{},transitions:i&&{getPosition:i.geometry}};for(const o in t){const r=t[o];let a=e.props[o];o.startsWith("get")&&(a=e.getSubLayerAccessor(a),s.updateTriggers[r]=n[o],i&&(s.transitions[r]=i[o])),s[r]=a}return s}var y=i(3459);function f(e,t,i={}){const n={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},{startRow:s=0,endRow:o=e.length}=i;for(let r=s;r<o;r++){const i=e[r],{geometry:s}=i;if(s)if("GeometryCollection"===s.type){y.A.assert(Array.isArray(s.geometries),"GeoJSON does not have geometries array");const{geometries:e}=s;for(let s=0;s<e.length;s++){x(e[s],n,t,i,r)}}else x(s,n,t,i,r)}return n}function x(e,t,i,n,s){const{type:o,coordinates:r}=e,{pointFeatures:a,lineFeatures:l,polygonFeatures:p,polygonOutlineFeatures:u}=t;if(function(e,t){let i=P[e];y.A.assert(i,`Unknown GeoJSON type ${e}`);for(;t&&--i>0;)t=t[0];return t&&Number.isFinite(t[0])}(o,r))switch(o){case"Point":a.push(i({geometry:e},n,s));break;case"MultiPoint":r.forEach((e=>{a.push(i({geometry:{type:"Point",coordinates:e}},n,s))}));break;case"LineString":l.push(i({geometry:e},n,s));break;case"MultiLineString":r.forEach((e=>{l.push(i({geometry:{type:"LineString",coordinates:e}},n,s))}));break;case"Polygon":p.push(i({geometry:e},n,s)),r.forEach((e=>{u.push(i({geometry:{type:"LineString",coordinates:e}},n,s))}));break;case"MultiPolygon":r.forEach((e=>{p.push(i({geometry:{type:"Polygon",coordinates:e}},n,s)),e.forEach((e=>{u.push(i({geometry:{type:"LineString",coordinates:e}},n,s))}))}))}else y.A.warn(`${o} coordinates are malformed`)()}const P={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};function S(e){return e.geometry.coordinates}function b(e,t){const i={points:{},lines:{},polygons:{},polygonsOutline:{}},{points:n,lines:s,polygons:o}=e,r=function(e,t){const i={points:null,lines:null,polygons:null};for(const n in i){const s=e[n].globalFeatureIds.value;i[n]=new Uint8ClampedArray(4*s.length);const o=[];for(let e=0;e<s.length;e++)t(s[e],o),i[n][4*e+0]=o[0],i[n][4*e+1]=o[1],i[n][4*e+2]=o[2],i[n][4*e+3]=255}return i}(e,t);return i.points.data={length:n.positions.value.length/n.positions.size,attributes:{...n.attributes,getPosition:n.positions,instancePickingColors:{size:4,value:r.points}},properties:n.properties,numericProps:n.numericProps,featureIds:n.featureIds},i.lines.data={length:s.pathIndices.value.length-1,startIndices:s.pathIndices.value,attributes:{...s.attributes,getPath:s.positions,instancePickingColors:{size:4,value:r.lines}},properties:s.properties,numericProps:s.numericProps,featureIds:s.featureIds},i.lines._pathType="open",i.polygons.data={length:o.polygonIndices.value.length-1,startIndices:o.polygonIndices.value,attributes:{...o.attributes,getPolygon:o.positions,pickingColors:{size:4,value:r.polygons}},properties:o.properties,numericProps:o.numericProps,featureIds:o.featureIds},i.polygons._normalize=!1,o.triangles&&(i.polygons.data.attributes.indices=o.triangles.value),i.polygonsOutline.data={length:o.primitivePolygonIndices.value.length-1,startIndices:o.primitivePolygonIndices.value,attributes:{...o.attributes,getPath:o.positions,instancePickingColors:{size:4,value:r.polygons}},properties:o.properties,numericProps:o.numericProps,featureIds:o.featureIds},i.polygonsOutline._pathType="open",i}const m=["points","linestrings","polygons"],L={...c(u.circle),...c(u.icon),...c(u.text),...c(g),...c(d),stroked:!0,filled:!0,extruded:!1,wireframe:!1,_full3d:!1,iconAtlas:{type:"object",value:null},iconMapping:{type:"object",value:{}},getIcon:{type:"accessor",value:e=>e.properties.icon},getText:{type:"accessor",value:e=>e.properties.text},pointType:"circle",getRadius:{deprecatedFor:"getPointRadius"}};class C extends n.A{initializeState(){this.state={layerProps:{},features:{},featuresDiff:{}}}updateState({props:e,changeFlags:t}){if(!t.dataChanged)return;const{data:i}=this.props,n=i&&"points"in i&&"polygons"in i&&"lines"in i;this.setState({binary:n}),n?this._updateStateBinary({props:e,changeFlags:t}):this._updateStateJSON({props:e,changeFlags:t})}_updateStateBinary({props:e,changeFlags:t}){const i=b(e.data,this.encodePickingColor);this.setState({layerProps:i})}_updateStateJSON({props:e,changeFlags:t}){const i=function(e){if(Array.isArray(e))return e;switch(y.A.assert(e.type,"GeoJSON does not have type"),e.type){case"Feature":return[e];case"FeatureCollection":return y.A.assert(Array.isArray(e.features),"GeoJSON does not have features array"),e.features;default:return[{geometry:e}]}}(e.data),n=this.getSubLayerRow.bind(this);let o={};const r={};if(Array.isArray(t.dataChanged)){const e=this.state.features;for(const t in e)o[t]=e[t].slice(),r[t]=[];for(const a of t.dataChanged){const t=f(i,n,a);for(const i in e)r[i].push((0,s.J)({data:o[i],getIndex:e=>e.__source.index,dataRange:a,replace:t[i]}))}}else o=f(i,n);const a=function(e,t){const i={points:{},lines:{},polygons:{},polygonsOutline:{}},{pointFeatures:n,lineFeatures:s,polygonFeatures:o,polygonOutlineFeatures:r}=e;return i.points.data=n,i.points._dataDiff=t.pointFeatures&&(()=>t.pointFeatures),i.points.getPosition=S,i.lines.data=s,i.lines._dataDiff=t.lineFeatures&&(()=>t.lineFeatures),i.lines.getPath=S,i.polygons.data=o,i.polygons._dataDiff=t.polygonFeatures&&(()=>t.polygonFeatures),i.polygons.getPolygon=S,i.polygonsOutline.data=r,i.polygonsOutline._dataDiff=t.polygonOutlineFeatures&&(()=>t.polygonOutlineFeatures),i.polygonsOutline.getPath=S,i}(o,r);this.setState({features:o,featuresDiff:r,layerProps:a})}getPickingInfo(e){const t=super.getPickingInfo(e),{index:i,sourceLayer:n}=t;return t.featureType=m.find((e=>n.id.startsWith(`${this.id}-${e}-`))),i>=0&&n.id.startsWith(`${this.id}-points-text`)&&this.state.binary&&(t.index=this.props.data.points.globalFeatureIds.value[i]),t}_updateAutoHighlight(e){const t=`${this.id}-points-`,i="points"===e.featureType;for(const n of this.getSubLayers())n.id.startsWith(t)===i&&n.updateAutoHighlight(e)}_renderPolygonLayer(){const{extruded:e,wireframe:t}=this.props,{layerProps:i}=this.state,n="polygons-fill",s=this.shouldRenderSubLayer(n,i.polygons?.data)&&this.getSubLayerClass(n,d.type);if(s){const o=h(this,d.props),r=e&&t;return r||delete o.getLineColor,o.updateTriggers.lineColors=r,new s(o,this.getSubLayerProps({id:n,updateTriggers:o.updateTriggers}),i.polygons)}return null}_renderLineLayers(){const{extruded:e,stroked:t}=this.props,{layerProps:i}=this.state,n="polygons-stroke",s="linestrings",o=!e&&t&&this.shouldRenderSubLayer(n,i.polygonsOutline?.data)&&this.getSubLayerClass(n,g.type),r=this.shouldRenderSubLayer(s,i.lines?.data)&&this.getSubLayerClass(s,g.type);if(o||r){const e=h(this,g.props);return[o&&new o(e,this.getSubLayerProps({id:n,updateTriggers:e.updateTriggers}),i.polygonsOutline),r&&new r(e,this.getSubLayerProps({id:s,updateTriggers:e.updateTriggers}),i.lines)]}return null}_renderPointLayers(){const{pointType:e}=this.props,{layerProps:t,binary:i}=this.state;let{highlightedObjectIndex:n}=this.props;!i&&Number.isFinite(n)&&(n=t.points.data.findIndex((e=>e.__source.index===n)));const s=new Set(e.split("+")),o=[];for(const r of s){const e=`points-${r}`,s=u[r],a=s&&this.shouldRenderSubLayer(e,t.points?.data)&&this.getSubLayerClass(e,s.type);if(a){const l=h(this,s.props);let p=t.points;if("text"===r&&i){const{instancePickingColors:e,...t}=p.data.attributes;p={...p,data:{...p.data,attributes:t}}}o.push(new a(l,this.getSubLayerProps({id:e,updateTriggers:l.updateTriggers,highlightedObjectIndex:n}),p))}}return o}renderLayers(){const{extruded:e}=this.props,t=this._renderPolygonLayer();return[!e&&t,this._renderLineLayers(),this._renderPointLayers(),e&&t]}getSubLayerAccessor(e){const{binary:t}=this.state;return t&&"function"==typeof e?(t,i)=>{const{data:n,index:s}=i,o=function(e,t){if(!e)return null;const i="startIndices"in e?e.startIndices[t]:t,n=e.featureIds.value[i];return-1!==i?function(e,t,i){const n={properties:{...e.properties[t]}};for(const s in e.numericProps)n.properties[s]=e.numericProps[s].value[i];return n}(e,n,i):null}(n,s);return e(o,i)}:super.getSubLayerAccessor(e)}}C.layerName="GeoJsonLayer",C.defaultProps=L;const F=C}}]);