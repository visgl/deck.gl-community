"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4893],{7057:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>r});const l=JSON.parse('{"id":"modules/editable-layers/developer-guide/get-started","title":"Get Started","description":"Installation","source":"@site/../docs/modules/editable-layers/developer-guide/get-started.md","sourceDirName":"modules/editable-layers/developer-guide","slug":"/modules/editable-layers/developer-guide/get-started","permalink":"/deck.gl-community/docs/modules/editable-layers/developer-guide/get-started","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl-community/tree/master/website/../docs/modules/editable-layers/developer-guide/get-started.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/deck.gl-community/docs/modules/editable-layers/"},"next":{"title":"Data Model","permalink":"/deck.gl-community/docs/modules/editable-layers/developer-guide/data-model"}}');var a=n(4848),s=n(8453);const o={},d="Get Started",i={},r=[{value:"Installation",id:"installation",level:2},{value:"Quick Overview of the API",id:"quick-overview-of-the-api",level:2},{value:"EditableGeoJsonLayer",id:"editablegeojsonlayer",level:3},{value:"Edit Modes",id:"edit-modes",level:3},{value:"Callbacks",id:"callbacks",level:3},{value:"Small example",id:"small-example",level:2},{value:"See Also",id:"see-also",level:2},{value:"Useful examples (Codesandbox)",id:"useful-examples-codesandbox",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"get-started",children:"Get Started"})}),"\n",(0,a.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(t.p,{children:"For yarn"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"yarn add @deck.gl-community/editable-layers\n"})}),"\n",(0,a.jsx)(t.h2,{id:"quick-overview-of-the-api",children:"Quick Overview of the API"}),"\n",(0,a.jsx)(t.h3,{id:"editablegeojsonlayer",children:"EditableGeoJsonLayer"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"/docs/modules/editable-layers/api-reference/layers/editable-geojson-layer",children:"EditableGeoJsonLayer"})," is implemented as a ",(0,a.jsx)(t.a,{href:"https://deck.gl",children:"deck.gl"})," layer. It provides the ability to view and edit multiple types of geometry formatted as ",(0,a.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946",children:"GeoJSON"})," (an open standard format for geometry) including polygons, lines, and points."]}),"\n",(0,a.jsx)(t.h3,{id:"edit-modes",children:"Edit Modes"}),"\n",(0,a.jsx)(t.p,{children:"TBA"}),"\n",(0,a.jsx)(t.h3,{id:"callbacks",children:"Callbacks"}),"\n",(0,a.jsx)(t.p,{children:"When there is the ability to edit, callbacks are provided to inform you of edits."}),"\n",(0,a.jsx)(t.h2,{id:"small-example",children:"Small example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:"import React from 'react';\nimport DeckGL from 'deck.gl';\nimport {\n  EditableGeoJsonLayer,\n  DrawLineStringMode,\n  DrawPolygonMode\n} from '@deck.gl-community/editable-layers';\nimport { StaticMap } from 'react-map-gl';\n\nconst INITIAL_VIEW_STATE = {\n  longitude: -122.41669,\n  latitude: 37.7853,\n  zoom: 13,\n  pitch: 0,\n  bearing: 0\n};\n\nexport function GeometryEditor() {\n  const [features, setFeatures] = React.useState({\n    type: 'FeatureCollection',\n    features: []\n  });\n  const [mode, setMode] = React.useState(() => DrawPolygonMode);\n  const [selectedFeatureIndexes] = React.useState([]);\n\n  const layer = new EditableGeoJsonLayer({\n    data: features,\n    mode,\n    selectedFeatureIndexes,\n    onEdit: ({ updatedData }) => {\n      setFeatures(updatedData);\n    }\n  });\n\n  return (\n    <>\n      <DeckGL\n        initialViewState={INITIAL_VIEW_STATE}\n        controller={{\n          doubleClickZoom: false\n        }}\n        layers={[layer]}\n        getCursor={layer.getCursor.bind(layer)}\n      >\n        <StaticMap mapboxApiAccessToken={YOUR_TOKEN_HERE} />\n      </DeckGL>\n\n      <div className='controls'>\n        <button\n          className={`button ${mode === DrawLineStringMode ? 'active' : ''}`}\n          onClick={() => setMode(() => DrawLineStringMode)}\n        >\n          Line\n        </button>\n        <button\n          className={`button ${mode === DrawPolygonMode ? 'active' : ''}`}\n          onClick={() => setMode(() => DrawPolygonMode)}\n        >\n          Polygon\n        </button>\n      </div>\n    </>\n  );\n}\n\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Live example on ",(0,a.jsx)(t.a,{href:"https://codesandbox.io/s/nebula-react-basic-example-q7t9u?file=/src/App.js",children:"codesandbox"})]}),"\n",(0,a.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/docs/modules/editable-layers/api-reference/layers/editable-geojson-layer",children:"EditableGeoJsonLayer"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://deck.gl/docs/get-started/using-with-react",children:"Using deck.gl with React"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://deck.gl/docs/get-started/using-with-map",children:"Using deck.gl with a Base Map"})}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"useful-examples-codesandbox",children:"Useful examples (Codesandbox)"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://codesandbox.io/s/hello-world-nebulagl-csvsm",children:"Hello World (using deck.gl)"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://codesandbox.io/s/hello-nebulagl-with-toolbox-oelkr",children:"With Toolbox"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://codesandbox.io/s/deckgl-and-nebulagl-editablegeojsonlayer-no-react-p9yrs",children:"No React"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://codesandbox.io/s/connect-the-dots-mode-yow65",children:"Custom EditMode"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var l=n(6540);const a={},s=l.createContext(a);function o(e){const t=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),l.createElement(s.Provider,{value:t},e.children)}}}]);