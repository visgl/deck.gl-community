importScripts("https://d3js.org/d3-collection.v1.min.js"),importScripts("https://d3js.org/d3-dispatch.v1.min.js"),importScripts("https://d3js.org/d3-quadtree.v1.min.js"),importScripts("https://d3js.org/d3-timer.v1.min.js"),importScripts("https://d3js.org/d3-force.v1.min.js"),onmessage=function(t){const{nodes:o,edges:s}=t.data,{nBodyStrength:e,nBodyDistanceMin:i,nBodyDistanceMax:d,getCollisionRadius:n}=t.data.options,r=d3.forceSimulation(o).force("edge",d3.forceLink(s).id((t=>t.id))).force("charge",d3.forceManyBody().strength(e).distanceMin(i).distanceMax(d)).force("center",d3.forceCenter()).force("collision",d3.forceCollide().radius(n)).stop();for(let a=0,c=Math.ceil(Math.log(r.alphaMin())/Math.log(1-r.alphaDecay()));a<c;++a)postMessage({type:"tick",progress:a/c,options:t.data.options}),r.tick();postMessage({type:"end",nodes:o,edges:s,options:t.data.options}),this.self.close()};